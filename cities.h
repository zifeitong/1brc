#include <array>
#include <string_view>

#include "mph.h"
#include "o1hash.h"

using std::literals::operator""sv;

constexpr auto city_names = std::array{
    "Abha"sv,
    "Abidjan"sv,
    "Abéché"sv,
    "Accra"sv,
    "Addis Ababa"sv,
    "Adelaide"sv,
    "Aden"sv,
    "Ahvaz"sv,
    "Albuquerque"sv,
    "Alexandra"sv,
    "Alexandria"sv,
    "Algiers"sv,
    "Alice Springs"sv,
    "Almaty"sv,
    "Amsterdam"sv,
    "Anadyr"sv,
    "Anchorage"sv,
    "Andorra la Vella"sv,
    "Ankara"sv,
    "Antananarivo"sv,
    "Antsiranana"sv,
    "Arkhangelsk"sv,
    "Ashgabat"sv,
    "Asmara"sv,
    "Assab"sv,
    "Astana"sv,
    "Athens"sv,
    "Atlanta"sv,
    "Auckland"sv,
    "Austin"sv,
    "Baghdad"sv,
    "Baguio"sv,
    "Baku"sv,
    "Baltimore"sv,
    "Bamako"sv,
    "Bangkok"sv,
    "Bangui"sv,
    "Banjul"sv,
    "Barcelona"sv,
    "Bata"sv,
    "Batumi"sv,
    "Beijing"sv,
    "Beirut"sv,
    "Belgrade"sv,
    "Belize City"sv,
    "Benghazi"sv,
    "Bergen"sv,
    "Berlin"sv,
    "Bilbao"sv,
    "Birao"sv,
    "Bishkek"sv,
    "Bissau"sv,
    "Blantyre"sv,
    "Bloemfontein"sv,
    "Boise"sv,
    "Bordeaux"sv,
    "Bosaso"sv,
    "Boston"sv,
    "Bouaké"sv,
    "Bratislava"sv,
    "Brazzaville"sv,
    "Bridgetown"sv,
    "Brisbane"sv,
    "Brussels"sv,
    "Bucharest"sv,
    "Budapest"sv,
    "Bujumbura"sv,
    "Bulawayo"sv,
    "Burnie"sv,
    "Busan"sv,
    "Cabo San Lucas"sv,
    "Cairns"sv,
    "Cairo"sv,
    "Calgary"sv,
    "Canberra"sv,
    "Cape Town"sv,
    "Changsha"sv,
    "Charlotte"sv,
    "Chiang Mai"sv,
    "Chicago"sv,
    "Chihuahua"sv,
    "Chittagong"sv,
    "Chișinău"sv,
    "Chongqing"sv,
    "Christchurch"sv,
    "City of San Marino"sv,
    "Colombo"sv,
    "Columbus"sv,
    "Conakry"sv,
    "Copenhagen"sv,
    "Cotonou"sv,
    "Cracow"sv,
    "Da Lat"sv,
    "Da Nang"sv,
    "Dakar"sv,
    "Dallas"sv,
    "Damascus"sv,
    "Dampier"sv,
    "Dar es Salaam"sv,
    "Darwin"sv,
    "Denpasar"sv,
    "Denver"sv,
    "Detroit"sv,
    "Dhaka"sv,
    "Dikson"sv,
    "Dili"sv,
    "Djibouti"sv,
    "Dodoma"sv,
    "Dolisie"sv,
    "Douala"sv,
    "Dubai"sv,
    "Dublin"sv,
    "Dunedin"sv,
    "Durban"sv,
    "Dushanbe"sv,
    "Edinburgh"sv,
    "Edmonton"sv,
    "El Paso"sv,
    "Entebbe"sv,
    "Erbil"sv,
    "Erzurum"sv,
    "Fairbanks"sv,
    "Fianarantsoa"sv,
    "Flores,  Petén"sv,
    "Frankfurt"sv,
    "Fresno"sv,
    "Fukuoka"sv,
    "Gaborone"sv,
    "Gabès"sv,
    "Gagnoa"sv,
    "Gangtok"sv,
    "Garissa"sv,
    "Garoua"sv,
    "George Town"sv,
    "Ghanzi"sv,
    "Gjoa Haven"sv,
    "Guadalajara"sv,
    "Guangzhou"sv,
    "Guatemala City"sv,
    "Halifax"sv,
    "Hamburg"sv,
    "Hamilton"sv,
    "Hanga Roa"sv,
    "Hanoi"sv,
    "Harare"sv,
    "Harbin"sv,
    "Hargeisa"sv,
    "Hat Yai"sv,
    "Havana"sv,
    "Helsinki"sv,
    "Heraklion"sv,
    "Hiroshima"sv,
    "Ho Chi Minh City"sv,
    "Hobart"sv,
    "Hong Kong"sv,
    "Honiara"sv,
    "Honolulu"sv,
    "Houston"sv,
    "Ifrane"sv,
    "Indianapolis"sv,
    "Iqaluit"sv,
    "Irkutsk"sv,
    "Istanbul"sv,
    "Jacksonville"sv,
    "Jakarta"sv,
    "Jayapura"sv,
    "Jerusalem"sv,
    "Johannesburg"sv,
    "Jos"sv,
    "Juba"sv,
    "Kabul"sv,
    "Kampala"sv,
    "Kandi"sv,
    "Kankan"sv,
    "Kano"sv,
    "Kansas City"sv,
    "Karachi"sv,
    "Karonga"sv,
    "Kathmandu"sv,
    "Khartoum"sv,
    "Kingston"sv,
    "Kinshasa"sv,
    "Kolkata"sv,
    "Kuala Lumpur"sv,
    "Kumasi"sv,
    "Kunming"sv,
    "Kuopio"sv,
    "Kuwait City"sv,
    "Kyiv"sv,
    "Kyoto"sv,
    "La Ceiba"sv,
    "La Paz"sv,
    "Lagos"sv,
    "Lahore"sv,
    "Lake Havasu City"sv,
    "Lake Tekapo"sv,
    "Las Palmas de Gran Canaria"sv,
    "Las Vegas"sv,
    "Launceston"sv,
    "Lhasa"sv,
    "Libreville"sv,
    "Lisbon"sv,
    "Livingstone"sv,
    "Ljubljana"sv,
    "Lodwar"sv,
    "Lomé"sv,
    "London"sv,
    "Los Angeles"sv,
    "Louisville"sv,
    "Luanda"sv,
    "Lubumbashi"sv,
    "Lusaka"sv,
    "Luxembourg City"sv,
    "Lviv"sv,
    "Lyon"sv,
    "Madrid"sv,
    "Mahajanga"sv,
    "Makassar"sv,
    "Makurdi"sv,
    "Malabo"sv,
    "Malé"sv,
    "Managua"sv,
    "Manama"sv,
    "Mandalay"sv,
    "Mango"sv,
    "Manila"sv,
    "Maputo"sv,
    "Marrakesh"sv,
    "Marseille"sv,
    "Maun"sv,
    "Medan"sv,
    "Mek'ele"sv,
    "Melbourne"sv,
    "Memphis"sv,
    "Mexicali"sv,
    "Mexico City"sv,
    "Miami"sv,
    "Milan"sv,
    "Milwaukee"sv,
    "Minneapolis"sv,
    "Minsk"sv,
    "Mogadishu"sv,
    "Mombasa"sv,
    "Monaco"sv,
    "Moncton"sv,
    "Monterrey"sv,
    "Montreal"sv,
    "Moscow"sv,
    "Mumbai"sv,
    "Murmansk"sv,
    "Muscat"sv,
    "Mzuzu"sv,
    "N'Djamena"sv,
    "Naha"sv,
    "Nairobi"sv,
    "Nakhon Ratchasima"sv,
    "Napier"sv,
    "Napoli"sv,
    "Nashville"sv,
    "Nassau"sv,
    "Ndola"sv,
    "New Delhi"sv,
    "New Orleans"sv,
    "New York City"sv,
    "Ngaoundéré"sv,
    "Niamey"sv,
    "Nicosia"sv,
    "Niigata"sv,
    "Nouadhibou"sv,
    "Nouakchott"sv,
    "Novosibirsk"sv,
    "Nuuk"sv,
    "Odesa"sv,
    "Odienné"sv,
    "Oklahoma City"sv,
    "Omaha"sv,
    "Oranjestad"sv,
    "Oslo"sv,
    "Ottawa"sv,
    "Ouagadougou"sv,
    "Ouahigouya"sv,
    "Ouarzazate"sv,
    "Oulu"sv,
    "Palembang"sv,
    "Palermo"sv,
    "Palm Springs"sv,
    "Palmerston North"sv,
    "Panama City"sv,
    "Parakou"sv,
    "Paris"sv,
    "Perth"sv,
    "Petropavlovsk-Kamchatsky"sv,
    "Philadelphia"sv,
    "Phnom Penh"sv,
    "Phoenix"sv,
    "Pittsburgh"sv,
    "Podgorica"sv,
    "Pointe-Noire"sv,
    "Pontianak"sv,
    "Port Moresby"sv,
    "Port Sudan"sv,
    "Port Vila"sv,
    "Port-Gentil"sv,
    "Portland (OR)"sv,
    "Porto"sv,
    "Prague"sv,
    "Praia"sv,
    "Pretoria"sv,
    "Pyongyang"sv,
    "Rabat"sv,
    "Rangpur"sv,
    "Reggane"sv,
    "Reykjavík"sv,
    "Riga"sv,
    "Riyadh"sv,
    "Rome"sv,
    "Roseau"sv,
    "Rostov-on-Don"sv,
    "Sacramento"sv,
    "Saint Petersburg"sv,
    "Saint-Pierre"sv,
    "Salt Lake City"sv,
    "San Antonio"sv,
    "San Diego"sv,
    "San Francisco"sv,
    "San Jose"sv,
    "San José"sv,
    "San Juan"sv,
    "San Salvador"sv,
    "Sana'a"sv,
    "Santo Domingo"sv,
    "Sapporo"sv,
    "Sarajevo"sv,
    "Saskatoon"sv,
    "Seattle"sv,
    "Seoul"sv,
    "Seville"sv,
    "Shanghai"sv,
    "Singapore"sv,
    "Skopje"sv,
    "Sochi"sv,
    "Sofia"sv,
    "Sokoto"sv,
    "Split"sv,
    "St. John's"sv,
    "St. Louis"sv,
    "Stockholm"sv,
    "Surabaya"sv,
    "Suva"sv,
    "Suwałki"sv,
    "Sydney"sv,
    "Ségou"sv,
    "Tabora"sv,
    "Tabriz"sv,
    "Taipei"sv,
    "Tallinn"sv,
    "Tamale"sv,
    "Tamanrasset"sv,
    "Tampa"sv,
    "Tashkent"sv,
    "Tauranga"sv,
    "Tbilisi"sv,
    "Tegucigalpa"sv,
    "Tehran"sv,
    "Tel Aviv"sv,
    "Thessaloniki"sv,
    "Thiès"sv,
    "Tijuana"sv,
    "Timbuktu"sv,
    "Tirana"sv,
    "Toamasina"sv,
    "Tokyo"sv,
    "Toliara"sv,
    "Toluca"sv,
    "Toronto"sv,
    "Tripoli"sv,
    "Tromsø"sv,
    "Tucson"sv,
    "Tunis"sv,
    "Ulaanbaatar"sv,
    "Upington"sv,
    "Vaduz"sv,
    "Valencia"sv,
    "Valletta"sv,
    "Vancouver"sv,
    "Veracruz"sv,
    "Vienna"sv,
    "Vientiane"sv,
    "Villahermosa"sv,
    "Vilnius"sv,
    "Virginia Beach"sv,
    "Vladivostok"sv,
    "Warsaw"sv,
    "Washington, D.C."sv,
    "Wau"sv,
    "Wellington"sv,
    "Whitehorse"sv,
    "Wichita"sv,
    "Willemstad"sv,
    "Winnipeg"sv,
    "Wrocław"sv,
    "Xi'an"sv,
    "Yakutsk"sv,
    "Yangon"sv,
    "Yaoundé"sv,
    "Yellowknife"sv,
    "Yerevan"sv,
    "Yinchuan"sv,
    "Zagreb"sv,
    "Zanzibar City"sv,
    "Zürich"sv,
    "Ürümqi"sv,
    "İzmir"sv,
};

static constexpr auto _table = std::array{
    std::pair(1243646474ul, 0),   std::pair(1469753018ul, 1),
    std::pair(571426518ul, 2),    std::pair(1588031554ul, 3),
    std::pair(865479793ul, 4),    std::pair(1448844194ul, 5),
    std::pair(1597412512ul, 6),   std::pair(1404205670ul, 7),
    std::pair(1455132701ul, 8),   std::pair(1575857380ul, 9),
    std::pair(1433581769ul, 10),  std::pair(1467801159ul, 11),
    std::pair(1581326480ul, 12),  std::pair(1669439056ul, 13),
    std::pair(1693074706ul, 14),  std::pair(1709288654ul, 15),
    std::pair(1543364439ul, 16),  std::pair(1333220702ul, 17),
    std::pair(1460727372ul, 18),  std::pair(1333989414ul, 19),
    std::pair(1359549794ul, 20),  std::pair(1436157429ul, 21),
    std::pair(1417077769ul, 22),  std::pair(1460786901ul, 23),
    std::pair(1250688056ul, 24),  std::pair(1409787902ul, 25),
    std::pair(1568814788ul, 26),  std::pair(1409731366ul, 27),
    std::pair(1326876171ul, 28),  std::pair(1567870533ul, 29),
    std::pair(1347547513ul, 30),  std::pair(1581422564ul, 31),
    std::pair(1807132641ul, 32),  std::pair(1562222162ul, 33),
    std::pair(1469715644ul, 34),  std::pair(1484252851ul, 35),
    std::pair(1607237743ul, 36),  std::pair(1653568273ul, 37),
    std::pair(1398591798ul, 38),  std::pair(1244843320ul, 39),
    std::pair(1598843637ul, 40),  std::pair(1449704836ul, 41),
    std::pair(1777010393ul, 42),  std::pair(1308009217ul, 43),
    std::pair(481691902ul, 44),   std::pair(1333618238ul, 45),
    std::pair(1421118756ul, 46),  std::pair(1512103819ul, 47),
    std::pair(1339007949ul, 48),  std::pair(1333631600ul, 49),
    std::pair(1491210362ul, 50),  std::pair(1486989366ul, 51),
    std::pair(1686077164ul, 52),  std::pair(1533237729ul, 53),
    std::pair(1640269356ul, 54),  std::pair(1410028593ul, 55),
    std::pair(1579627880ul, 56),  std::pair(1657247192ul, 57),
    std::pair(78973202ul, 58),    std::pair(1519875415ul, 59),
    std::pair(1736318134ul, 60),  std::pair(1608609322ul, 61),
    std::pair(1383934866ul, 62),  std::pair(1535064495ul, 63),
    std::pair(1655420121ul, 64),  std::pair(1421609234ul, 65),
    std::pair(1385984110ul, 66),  std::pair(1334345906ul, 67),
    std::pair(1463850905ul, 68),  std::pair(1327327235ul, 69),
    std::pair(481967851ul, 70),   std::pair(1663661484ul, 71),
    std::pair(1693505842ul, 72),  std::pair(1435451541ul, 73),
    std::pair(1468510532ul, 74),  std::pair(1168302434ul, 75),
    std::pair(1571529084ul, 76),  std::pair(1576085849ul, 77),
    std::pair(430654891ul, 78),   std::pair(1345518067ul, 79),
    std::pair(1289355832ul, 80),  std::pair(1489471631ul, 81),
    std::pair(448099502ul, 82),   std::pair(1589465617ul, 83),
    std::pair(1435526657ul, 84),  std::pair(1684668442ul, 85),
    std::pair(1597967881ul, 86),  std::pair(1502217533ul, 87),
    std::pair(1540311296ul, 88),  std::pair(1352298636ul, 89),
    std::pair(1656590378ul, 90),  std::pair(1597341359ul, 91),
    std::pair(1227514251ul, 92),  std::pair(1157791791ul, 93),
    std::pair(1352233116ul, 94),  std::pair(1428931714ul, 95),
    std::pair(1387504885ul, 96),  std::pair(1567363654ul, 97),
    std::pair(772645509ul, 98),   std::pair(1588751303ul, 99),
    std::pair(1715057327ul, 100), std::pair(1548176315ul, 101),
    std::pair(1686202107ul, 102), std::pair(1441236300ul, 103),
    std::pair(1649654212ul, 104), std::pair(1456748677ul, 105),
    std::pair(1569004239ul, 106), std::pair(1497643193ul, 107),
    std::pair(1564426793ul, 108), std::pair(1384215811ul, 109),
    std::pair(1294086295ul, 110), std::pair(1511670198ul, 111),
    std::pair(1393836182ul, 112), std::pair(1332777778ul, 113),
    std::pair(1488992727ul, 114), std::pair(1652558523ul, 115),
    std::pair(1692911527ul, 116), std::pair(1221785432ul, 117),
    std::pair(1308008161ul, 118), std::pair(1476579764ul, 119),
    std::pair(1702295561ul, 120), std::pair(1466827996ul, 121),
    std::pair(1503320533ul, 122), std::pair(473919538ul, 123),
    std::pair(1522507437ul, 124), std::pair(1641892802ul, 125),
    std::pair(1569306513ul, 126), std::pair(1554361365ul, 127),
    std::pair(608785074ul, 128),  std::pair(1517798983ul, 129),
    std::pair(1608627967ul, 130), std::pair(1534644598ul, 131),
    std::pair(1607787582ul, 132), std::pair(477491334ul, 133),
    std::pair(1731974884ul, 134), std::pair(1325021000ul, 135),
    std::pair(1263076602ul, 136), std::pair(1827509489ul, 137),
    std::pair(1518516751ul, 138), std::pair(1515518607ul, 139),
    std::pair(1553001228ul, 140), std::pair(1647016677ul, 141),
    std::pair(426255253ul, 142),  std::pair(1583722178ul, 143),
    std::pair(1490916417ul, 144), std::pair(1442477241ul, 145),
    std::pair(1387647991ul, 146), std::pair(805095214ul, 147),
    std::pair(1409842810ul, 148), std::pair(1598010638ul, 149),
    std::pair(1477080502ul, 150), std::pair(1429806353ul, 151),
    std::pair(1364559592ul, 152), std::pair(1602886854ul, 153),
    std::pair(1018487908ul, 154), std::pair(1295170765ul, 155),
    std::pair(1761147515ul, 156), std::pair(1723963554ul, 157),
    std::pair(1438665181ul, 158), std::pair(1626216676ul, 159),
    std::pair(1729881754ul, 160), std::pair(1716266190ul, 161),
    std::pair(1328303276ul, 162), std::pair(1620696322ul, 163),
    std::pair(1460786382ul, 164), std::pair(1500207752ul, 165),
    std::pair(1448744310ul, 166), std::pair(1518987705ul, 167),
    std::pair(3403197243ul, 168), std::pair(1243055488ul, 169),
    std::pair(1737385691ul, 170), std::pair(1340058551ul, 171),
    std::pair(1354700781ul, 172), std::pair(1390617686ul, 173),
    std::pair(1627508717ul, 174), std::pair(503782751ul, 175),
    std::pair(1321193877ul, 176), std::pair(1511555843ul, 177),
    std::pair(1416492677ul, 178), std::pair(1634990312ul, 179),
    std::pair(1632170380ul, 180), std::pair(1358981509ul, 181),
    std::pair(1308043219ul, 182), std::pair(1713011448ul, 183),
    std::pair(1534080612ul, 184), std::pair(1470731580ul, 185),
    std::pair(1546798739ul, 186), std::pair(465635536ul, 187),
    std::pair(1837813387ul, 188), std::pair(1738965316ul, 189),
    std::pair(1136310239ul, 190), std::pair(1291486814ul, 191),
    std::pair(1656142756ul, 192), std::pair(1596330650ul, 193),
    std::pair(1685283289ul, 194), std::pair(1413523165ul, 195),
    std::pair(605334974ul, 196),  std::pair(981774182ul, 197),
    std::pair(1670531096ul, 198), std::pair(1609339377ul, 199),
    std::pair(1491575938ul, 200), std::pair(1524804437ul, 201),
    std::pair(1564763308ul, 202), std::pair(1366245834ul, 203),
    std::pair(1493238557ul, 204), std::pair(1398465897ul, 205),
    std::pair(1539369067ul, 206), std::pair(1002171695ul, 207),
    std::pair(1429888124ul, 208), std::pair(1367532304ul, 209),
    std::pair(1421904664ul, 210), std::pair(1371361812ul, 211),
    std::pair(1672199771ul, 212), std::pair(1837811968ul, 213),
    std::pair(1598552463ul, 214), std::pair(1484416949ul, 215),
    std::pair(1243722204ul, 216), std::pair(1602517294ul, 217),
    std::pair(1671347901ul, 218), std::pair(1346280776ul, 219),
    std::pair(1398383446ul, 220), std::pair(1320407572ul, 221),
    std::pair(1396816690ul, 222), std::pair(1575488902ul, 223),
    std::pair(1456252949ul, 224), std::pair(1441257658ul, 225),
    std::pair(1746973278ul, 226), std::pair(1540447483ul, 227),
    std::pair(1497977875ul, 228), std::pair(1599220448ul, 229),
    std::pair(1326148838ul, 230), std::pair(933679829ul, 231),
    std::pair(1538128213ul, 232), std::pair(1559450347ul, 233),
    std::pair(1346016420ul, 234), std::pair(482367134ul, 235),
    std::pair(1539819781ul, 236), std::pair(1326775882ul, 237),
    std::pair(1698691264ul, 238), std::pair(1663326661ul, 239),
    std::pair(1686082719ul, 240), std::pair(1483701996ul, 241),
    std::pair(1250131677ul, 242), std::pair(1360043341ul, 243),
    std::pair(1600786051ul, 244), std::pair(1783012169ul, 245),
    std::pair(1494647226ul, 246), std::pair(1597858251ul, 247),
    std::pair(1300741136ul, 248), std::pair(1569018794ul, 249),
    std::pair(1377533639ul, 250), std::pair(1925608333ul, 251),
    std::pair(1460177184ul, 252), std::pair(1243646104ul, 253),
    std::pair(1605343936ul, 254), std::pair(1539504068ul, 255),
    std::pair(1461052461ul, 256), std::pair(1541115649ul, 257),
    std::pair(1422918792ul, 258), std::pair(1486988584ul, 259),
    std::pair(1462915144ul, 260), std::pair(915013291ul, 261),
    std::pair(1051130332ul, 262), std::pair(1083858251ul, 263),
    std::pair(321974085ul, 264),  std::pair(1534004524ul, 265),
    std::pair(1579606289ul, 266), std::pair(1282223552ul, 267),
    std::pair(1484487484ul, 268), std::pair(1463424420ul, 269),
    std::pair(1411888395ul, 270), std::pair(1513540583ul, 271),
    std::pair(1609674633ul, 272), std::pair(109825490ul, 273),
    std::pair(1397539206ul, 274), std::pair(1380370332ul, 275),
    std::pair(1593904173ul, 276), std::pair(1627288544ul, 277),
    std::pair(1525011556ul, 278), std::pair(1611998547ul, 279),
    std::pair(1473738233ul, 280), std::pair(1731073950ul, 281),
    std::pair(1807262298ul, 282), std::pair(1321421013ul, 283),
    std::pair(1595757651ul, 284), std::pair(1686173740ul, 285),
    std::pair(1547942081ul, 286), std::pair(464496326ul, 287),
    std::pair(1512188958ul, 288), std::pair(1526257580ul, 289),
    std::pair(1685802998ul, 290), std::pair(702110220ul, 291),
    std::pair(1462138097ul, 292), std::pair(1133533218ul, 293),
    std::pair(1605047129ul, 294), std::pair(1699048246ul, 295),
    std::pair(1505779268ul, 296), std::pair(1085443493ul, 297),
    std::pair(1428813068ul, 298), std::pair(1783641065ul, 299),
    std::pair(1744074551ul, 300), std::pair(1207171563ul, 301),
    std::pair(1492469186ul, 302), std::pair(1038409978ul, 303),
    std::pair(1739226675ul, 304), std::pair(1576069608ul, 305),
    std::pair(1400529474ul, 306), std::pair(1603483592ul, 307),
    std::pair(1701594350ul, 308), std::pair(1364284251ul, 309),
    std::pair(1605088348ul, 310), std::pair(1307557129ul, 311),
    std::pair(1669196818ul, 312), std::pair(1243549484ul, 313),
    std::pair(1327988733ul, 314), std::pair(1348407613ul, 315),
    std::pair(1396792643ul, 316), std::pair(1653118628ul, 317),
    std::pair(1501209550ul, 318), std::pair(1421932533ul, 319),
    std::pair(1462207526ul, 320), std::pair(1581086538ul, 321),
    std::pair(1097579894ul, 322), std::pair(992277892ul, 323),
    std::pair(1040377885ul, 324), std::pair(976465328ul, 325),
    std::pair(1474701124ul, 326), std::pair(1097750337ul, 327),
    std::pair(1139828358ul, 328), std::pair(502194000ul, 329),
    std::pair(1661359803ul, 330), std::pair(1635102215ul, 331),
    std::pair(1388488272ul, 332), std::pair(1661841662ul, 333),
    std::pair(1662274257ul, 334), std::pair(1738531032ul, 335),
    std::pair(1469901617ul, 336), std::pair(1476284725ul, 337),
    std::pair(1508922061ul, 338), std::pair(1491738977ul, 339),
    std::pair(1435257516ul, 340), std::pair(1400923565ul, 341),
    std::pair(1700688263ul, 342), std::pair(1532669722ul, 343),
    std::pair(1008398594ul, 344), std::pair(1076544002ul, 345),
    std::pair(1429270923ul, 346), std::pair(1244021972ul, 347),
    std::pair(1245050738ul, 348), std::pair(1738780643ul, 349),
    std::pair(1540791333ul, 350), std::pair(1614246241ul, 351),
    std::pair(1566155128ul, 352), std::pair(1636394905ul, 353),
    std::pair(1447967971ul, 354), std::pair(1512074781ul, 355),
    std::pair(1412402082ul, 356), std::pair(1365538483ul, 357),
    std::pair(1546302890ul, 358), std::pair(1468121062ul, 359),
    std::pair(1532593827ul, 360), std::pair(1477583041ul, 361),
    std::pair(1456031580ul, 362), std::pair(1435562058ul, 363),
    std::pair(1168962205ul, 364), std::pair(1612449561ul, 365),
    std::pair(609089080ul, 366),  std::pair(1372237624ul, 367),
    std::pair(1520328998ul, 368), std::pair(1409729893ul, 369),
    std::pair(1563825023ul, 370), std::pair(1853220949ul, 371),
    std::pair(1295120489ul, 372), std::pair(1400171894ul, 373),
    std::pair(1613249799ul, 374), std::pair(1590912048ul, 375),
    std::pair(288960898ul, 376),  std::pair(1649425505ul, 377),
    std::pair(1525929576ul, 378), std::pair(1351500556ul, 379),
    std::pair(1684767272ul, 380), std::pair(1845269407ul, 381),
    std::pair(1295673784ul, 382), std::pair(1570468286ul, 383),
    std::pair(1645665159ul, 384), std::pair(1648532589ul, 385),
    std::pair(1504093708ul, 386), std::pair(1463956856ul, 387),
    std::pair(1543453640ul, 388), std::pair(1560743458ul, 389),
    std::pair(441044721ul, 390),  std::pair(1518055756ul, 391),
    std::pair(1499736500ul, 392), std::pair(1090785124ul, 393),
    std::pair(339970311ul, 394),  std::pair(1483528499ul, 395),
    std::pair(1590663915ul, 396), std::pair(1394332543ul, 397),
    std::pair(1579529474ul, 398), std::pair(1575272293ul, 399),
    std::pair(1875301442ul, 400), std::pair(1321382413ul, 401),
    std::pair(1716264203ul, 402), std::pair(1561432704ul, 403),
    std::pair(205343586ul, 404),  std::pair(1477771454ul, 405),
    std::pair(1643616391ul, 406), std::pair(1614384830ul, 407),
    std::pair(1414785200ul, 408), std::pair(1828177129ul, 409),
    std::pair(1514301510ul, 410), std::pair(322843189ul, 411),
    std::pair(1546932180ul, 412),
};

int get_index(std::string_view name) {
  return mph::lookup<_table>(o1hash(name.data(), name.size()) >> 32);
}

std::string_view get_name(int index) { return city_names[index]; }
